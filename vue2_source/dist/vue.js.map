{"version":3,"file":"vue.js","sources":["../src/globalAPI.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function initGlobalAPI(Vue) {\r\n    // 静态方法\r\n    Vue.options = {};\r\n    Vue.mixin = function(mixin) {\r\n        \r\n    }\r\n    Vue.extend = function(options) {\r\n        function Sub(options = {}) {\r\n            this._init(options);   // 就是默认对子类进行初始化\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype);\r\n        Sub.options = options;  // 保存用户传递的选项\r\n        Sub.prototype.constructor = Sub;\r\n        return Sub;\r\n    }\r\n    Vue.options.components = {}; // 全局指令\r\n    Vue.component = function(id,definition) {\r\n        // 如果已经是函数，说明用户自己调用了Vue.extend\r\n        definition = typeof definition === 'function' ? definition : Vue.extend(definition);\r\n        Vue.options.components[id] = definition;\r\n        \r\n    }\r\n}","// 对模板进行编译处理\r\n// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {  // 对于vue2来说，一开始一定是<\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];\r\n    let top,root;\r\n\r\n    function createASTElement(tag,attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    // 最终需要转换成一颗抽象语法树\r\n    function start(tag,attrs) {\r\n        let node = createASTElement(tag,attrs);\r\n        if(!root) { // 如果是空树，那么将当前节点当作根节点\r\n            root = node;\r\n        }\r\n        if(top) {   // 父子节点双向记住\r\n            node.parent = top;\r\n            top.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        top = node;\r\n    }\r\n\r\n    function chars(text) {  \r\n        text = text.replace(/\\s/g,'');\r\n        text && top.children.push({ // 文本直接放到当前节点中\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: top\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        let node = stack.pop();\r\n        if(node !== tag) {  // 校验是否合法\r\n            // todo...\r\n        }\r\n        top = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);   // 截取，才好继续匹配后面的内容\\\r\n            // 如果不是结束标签就一直匹配\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({name: attr[1],value: attr[3] || attr[4] || attr[5]});\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n\r\n\r\n        return false;   // 不是开始标签\r\n    }\r\n\r\n    while (html) {\r\n        // textEnd = 0,说明是一个开始标签或结束标签 <div>   ></div>\r\n        // textEnd > 0,说明是文本的结束位置 xxxx</div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName,startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        else if(textEnd > 0) {  \r\n            let text = html.substring(0,textEnd);   // 文本内容\r\n            if(text) {\r\n                chars(text);\r\n                advance(text.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {  // 属性是一个数组\r\n    let str = '';\r\n    for(let i = 0;i < attrs.length;++ i) {\r\n        let attr = attrs[i];    // {name,value};\r\n        if(attr.name === 'style') { // 对于style属性需要在外面加一个大括号  style: {color: 'red'};\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                const [key,val] = item.split(':');\r\n                obj[key] = val;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    // 去掉多余逗号\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction genChildren(children) {\r\n    if(children) {\r\n        return children.map(child => gen(child)).join(',');\r\n    }\r\n}\r\n\r\nfunction gen(node) {\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else if(node.type === 3) {    // 对于文本属性，需要判断是否带有变量，没有带变量直接返回\r\n        let text = node.text;\r\n        const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n        if(!defaultTagRE.test(text)) {  // 不带变量文本 \r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            defaultTagRE.lastIndex = 0; // 去掉全局匹配，避免exec无法继续匹配\r\n            let tokens = [],match,lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                let index = match.index;    // 匹配的位置\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length) {   // 拿到剩余不带变量的字符\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // 生成对应标签\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0? genProps(ast.attrs) : 'null'}${ast.children.length? `,${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 将template 转换成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 生成render函数 （执行后获得虚拟DOM）\r\n    let code = codegen(ast);\r\n    code = `with(this) {return ${code}}`;   // 为了取变量的值，将作用域改变\r\n    let render = new Function(code);\r\n    return render;\r\n}","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id ++;\r\n        this.subs = []; // 存放当前属性对应的watcher有那些\r\n    }\r\n    depend() {\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this);    // 让watcher记住dep\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\nDep.target = null;  // 如何将watcher和dep关联？暴露一个全局属性\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\nexport default Dep;","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\nclass Watcher {\r\n    constructor(vm,expOrFn,options,cb) {\r\n        this.id = id ++;    // 不同组件有不同watcher，故使用id标识\r\n        this.renderWatcher = options;   // 是一个渲染watcher\r\n        if(typeof expOrFn === 'string') {\r\n            this.getter = function() {\r\n                return vm[expOrFn];\r\n            }\r\n        } else {\r\n            this.getter = expOrFn;  // 调用该函数可以发送取值\r\n        }\r\n        this.deps = []; // 实现计算属性和清理工作\r\n        this.depsId = new Set(); // 去重，避免重复放置dep\r\n        this.lazy = options.lazy;\r\n        this.cb = cb;\r\n        this.dirty = this.lazy\r\n        this.vm = vm;  \r\n        this.user = options.user; // 标识是否是用户自己的watcher\r\n        this.value = this.lazy ? undefined : this.get();\r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get();    // 获取计算属性getter返回值\r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        pushTarget(this);\r\n        const res = this.getter.call(this.vm);\r\n        popTarget();\r\n        return res;\r\n    }\r\n    update() {  // 异步更新\r\n        if(this.lazy) {\r\n            this.dirty = true;  // 依赖值发送变化，就标记变为脏值，但是没有重新渲染，故需要一个渲染watcher\r\n        } else {\r\n            queueWatcher(this); // 把当前watcher暂存\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();\r\n        if(this.user) {\r\n            console.log(newValue,oldValue,'watcher');\r\n            this.cb.call(this.vm,newValue,oldValue);\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i --) {\r\n            this.deps[i].depend(); \r\n        }\r\n    }\r\n}\r\n\r\nlet queue = [];\r\nlet hasW = new Set();\r\nlet pending = false;    // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    pending = false;\r\n    queue = [];\r\n    hasW.clear();\r\n    flushQueue.forEach(q => q.run());\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!hasW.has(id)) {\r\n        queue.push(watcher);\r\n        hasW.add(id);\r\n        \r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = []; // 维护nextTick的回调方法，避免多个nextTick要开启多个定时器\r\nlet waiting = false;\r\n\r\nfunction flushCallback() {\r\n    let cbs = callbacks.slice(0);\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\nlet timerFn;\r\nif(Promise) {\r\n    timerFn = () => {\r\n        Promise.resolve().then(flushCallback);\r\n    }\r\n}\r\nelse if(MutationObserver) {\r\n    let observer = MutationObserver(flushCallback);\r\n    let textNode = document.createTextNode(1);\r\n    observer.observer(textNode,{\r\n        characterData: true\r\n    });\r\n    timerFn = () => {\r\n        textNode.textContent = 2;\r\n    }\r\n} \r\nelse if(setImmediate) {\r\n    timerFn = () => {\r\n        setImmediate(flushCallback);\r\n    }\r\n} \r\nelse {\r\n    timerFn = () => {\r\n        setTimeout(flushCallback);\r\n    }\r\n}\r\n\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        timerFn();\r\n        // Promise.resolve().then(flushCallback);\r\n        waiting = true;\r\n    }\r\n}\r\n/*\r\n    需要给每个属性增加一个dep，目的是收集watcher\r\n    一个属性对应多个组件，故一个dep对应多个watcher\r\n    一个组件有多个属性，故一个watcher对应多个dep\r\n    即多对多关系\r\n*/\r\nexport default Watcher;","// h()\r\nexport function createElementVNode(vm,tag,data,...children) {\r\n    data ??= {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return VNode(vm,tag,key,data,children);\r\n}\r\n// _v()\r\nexport function createTextVNode(vm,text) {\r\n    return VNode(vm,undefined,undefined,undefined,undefined,text);\r\n}\r\n\r\nfunction VNode(vm,tag,key,data,children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    };\r\n}","function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') {   // 标签\r\n        vnode.el = document.createElement(tag); // 将真实节点和虚拟节点对应\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction patchProps(el, oldProps = {}, props = {}) {\r\n    // 旧节点有样式，新节点没有，则删除\r\n    let oldStyle = oldProps.style || {};\r\n    let newStyle = props.style || {};\r\n    for (let key in oldStyle) {\r\n        if (!newStyle[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    // 对比新旧属性\r\n    for (let key in oldProps) {\r\n        if (!props[key]) {\r\n            el.removeAttribute(key);\r\n        }\r\n    }\r\n\r\n    for (let key in props) {    // 使用新的覆盖旧的\r\n        if (key === 'style') {\r\n            for (let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, VNode) {\r\n    const isRealElement = oldVNode.nodeType;\r\n    if (isRealElement) {\r\n        const elm = oldVNode;   // 获取真实元素\r\n        const parentElm = elm.parentNode;   // 拿到父元素\r\n        let newElm = createElm(VNode);\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n        return newElm;\r\n    } else {\r\n        return patchVNode(oldVNode, VNode);\r\n    }\r\n}\r\n\r\nfunction isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n\r\nfunction patchVNode(oldVNode, VNode) {\r\n    // 1. 两个节点不同标签，直接删除旧节点，换新节点\r\n    // 2. 是相同节点 （判断节点tag和key）继续比较属性是否有差异（复用老节点，更新差异）\r\n    // 3. 继续比较子节点\r\n    if (!isSameVnode(oldVNode, VNode)) {\r\n        // 用父亲节点来操作子节点\r\n        let newNode = createElm(VNode);\r\n        oldVNode.el.parentNode.replaceChild(newNode, oldVNode);\r\n        return newNode;\r\n    }\r\n    let el = oldVNode.el; // 复用老节点元素\r\n    if (!oldVNode.tag) { // 是文本\r\n        if (oldVNode.text !== VNode.text) {\r\n            el.textContent = VNode.text;    // 更新文本内容\r\n        }\r\n    }\r\n    // 是标签\r\n    patchProps(el, oldVNode.data, VNode.data);\r\n    // 比较儿子节点\r\n    // 1. 一方有子节点，一方没有\r\n    // 2. 两方都有子节点\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = VNode.children || [];\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n        updateChildren(el, oldChildren, newChildren);\r\n    } else if (newChildren.length > 0) {\r\n        mountChildren(el, newChildren);\r\n    } else if (oldChildren.length > 0) {\r\n        el.innerHTML = '';  // 可以循环删除\r\n    }\r\n    return el;\r\n}\r\nfunction mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; ++i) {\r\n        let child = newChildren[i];\r\n        el.appendChild(child);\r\n    }\r\n}\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // vue2采用双指针比较\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n\r\n    // 前前 前后 后前 后后比较\r\n    let oldStartVNode = oldChildren[0];\r\n    let newStartVNode = newChildren[0];\r\n    let oldEndVNode = oldChildren[oldEndIndex];\r\n    let newEndVNode = newChildren[newEndIndex];\r\n    function makeIndexByKey(children) {\r\n        let map = {};\r\n        children.forEach((child,index) => {\r\n            map[child.key] = index;\r\n        });\r\n        return map;\r\n    }\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        if(!oldStartVNode) {\r\n            oldStartVNode = oldChildren[++ oldStartIndex];\r\n            continue;\r\n        } \r\n        if(!oldEndVNode) {\r\n            oldEndVNode = oldChildren[-- oldEndIndex];\r\n            continue;\r\n        }\r\n        // 前前比较\r\n        if (isSameVnode(oldStartVNode, newStartVNode)) {\r\n            patchVNode(oldStartVNode, newStartVNode);\r\n            oldStartVNode = oldChildren[++oldStartIndex];\r\n            newStartVNode = newChildren[++newStartIndex];\r\n        }\r\n        // 后后比较\r\n        else if (isSameVnode(oldEndVNode, newEndVNode)) {\r\n            patchVNode(oldEndVNode, newEndVNode);\r\n            oldEndVNode = oldChildren[--oldEndIndex];\r\n            newEndVNode = newChildren[--newEndIndex];\r\n        }\r\n        // 交叉对比\r\n        else if (isSameVnode(oldEndVNode, newStartVNode)) {\r\n            patchVNode(oldEndVNode, newStartVNode);\r\n            oldEndVNode = oldChildren[--oldEndIndex];\r\n            newStartVNode = newChildren[newStartIndex++];\r\n\r\n            el.insertBefore(oldEndVNode.el, oldStartVNode.el);   // 将尾旧节点移到头旧节点前\r\n        }\r\n        else if (isSameVnode(oldStartVNode, newEndVNode)) {\r\n            patchVNode(oldStartVNode, newEndVNode);\r\n            el.insertBefore(oldStartVNode.el, oldEndIndex.el.nextSibling);\r\n            oldStartVNode = oldChildren[++oldStartIndex];\r\n            newEndVNode = newChildren[--newEndIndex];\r\n        }\r\n        // 乱序比对 \r\n        else {\r\n            let moveIndex = map[newStartVNode.key];\r\n            if(moveIndex !== undefined) {\r\n                let moveVNode = oldChildren[moveIndex];\r\n                el.insertBefore(moveVNode.el,oldStartVNode.el);\r\n                oldChildren[moveIndex] = undefined; // 表示已经移动到正确位置了\r\n                patchVNode(moveVNode,newStartVNode);\r\n            } else {\r\n                el.insertBefore(createElm(newStartVNode),oldStartVNode.el); // 没有就创建真实节点插入\r\n            }\r\n            newStartVNode = newChildren[++ newStartIndex];\r\n        }\r\n    }\r\n\r\n    if (newStartIndex <= newEndIndex) {  // 有新节点，插入\r\n        for (let i = newStartIndex; i <= newEndIndex; ++i) {\r\n            let childEl = createElm(newChildren[i]);    // 将虚拟节点转换为真实节点并插入\r\n            let anchor = newChildren[newStartIndex + 1] ? newChildren[newStartIndex + 1].el : null;\r\n            el.insertBefore(childEl, anchor);\r\n        }\r\n    }\r\n\r\n    while (oldStartIndex <= oldEndIndex) {   // 多余旧节点，删除\r\n        if(oldChildren[oldStartIndex])    el.removeChild(oldChildren[oldStartIndex].el);\r\n        ++ oldStartIndex;\r\n    }\r\n}","import Watcher from \"./observe/watcher.js\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index.js\";\r\nimport { patch } from \"./vdom/patch.js\";\r\n\r\nexport function initLifycycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this,el = vm.$el;\r\n        const preVNode = vm._vnode;\r\n        vm._vnode = vnode;  // 保存，用于下次diff算法\r\n        if(preVNode) {  // 表示之前渲染过\r\n            vm.$el = patch(preVNode,vnode);\r\n        } else {\r\n            vm.$el = patch(el,vnode);   // 既有初始化的功能，又有更新的功能\r\n        }\r\n    };\r\n    // _c(tag,{},child)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this,...arguments);\r\n    };\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this,...arguments);\r\n    };\r\n    Vue.prototype._s = function(value) {\r\n        return JSON.stringify(value);\r\n    };\r\n    Vue.prototype._render = function() {\r\n        // 让with中的this指向实例\r\n        return this.$options.render.call(this);   // 通过ast语法转义后生成的render方法\r\n    };\r\n}\r\n\r\nexport function mountComponent(vm,el) {\r\n    vm.$el = el;\r\n    // 1. 调用render方法产生虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    };\r\n    new Watcher(vm,updateComponent,true);   // true标识渲染过程\r\n    // 2. 根据虚拟DOM产生真实DOM\r\n    // 3. 插入到el元素中\r\n}","// 重写部分方法\r\nlet oldArrayProto = Array.prototype;\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);   // 复制一份\r\n// 需要重写的方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];  // 其他方法如concat不会改变原数组，不需要重写\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {\r\n        // 默认需要调用原方法\r\n        const res = oldArrayProto[method].call(this,...args);   // 需要改变this执行，谁执行的绑定为谁\r\n        // 数据劫持\r\n        let inserted;\r\n        // 调用方法的是data上的数据\r\n        switch(method) {    // 获取新增的值\r\n            case 'push': \r\n            case 'unshift': \r\n                    inserted = args;\r\n                    break;  \r\n            case 'splice':  // arr.splice(开始位置，删除个数，新增数量...)\r\n                    inserted = args.splice(2);  // 获取新增数量，即剪切掉开始位置和删除个数\r\n            default:\r\n                    break;\r\n        }\r\n        let ob = this.__ob__;\r\n        if(inserted) {\r\n            // 对新增的内容进行监测,但是拿不到Observe的observeArray\r\n            // 将observeArray从类中分离不可行，不符合要求\r\n            // 调用方法的this是Observe 中传入的data，故可以在data上将Observe实例挂载上去\r\n            ob.observeArray(inserted);\r\n        }\r\n        ob.dep.notify();    // 通知更新\r\n        return res;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n// 对于数组来说，不推荐使用索引当作key来劫持，存在a[10000] = 1这种写法，那么劫持非常耗费性能\r\nclass Observe {\r\n    constructor(data) {\r\n        this.dep = new Dep();   // 给所有对象都新增dep\r\n        \r\n        if (Array.isArray(data)) {\r\n            // this是Observe的实例,同时给数据加标识，如果有属性表示该数据被监测过\r\n            // data.__ob__ = this;\r\n            // 但是要变成不可枚举的，不然在observe死循环\r\n            Object.defineProperty(data,'__ob__',{\r\n                value: this,\r\n                enumerable: false\r\n            });\r\n            // 用户一般使用数组方法修改数组，那么重写这些方法去监控\r\n            // data.__proto__ = {} 不推荐 直接重写，那么数组其他方法也没了\r\n            data.__proto__ = newArrayProto;\r\n            // 对数组中每一个值也要检测，万一是对象\r\n            this.observeArray(data);\r\n        } else {\r\n            // Object.defineProperty 只能劫持存在的属性\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性，对性能有影响\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item));\r\n    }\r\n}\r\n\r\nfunction dependArray(value) {\r\n    for(let i = 0;i < value.length;++ i) {\r\n        value[i].__ob__ && value[i].__ob__.dep.depend();\r\n        if(Array.isArray(value[i])) {\r\n            dependArray(value[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    let childOb = observe(value); // 对所有对象的属性进行劫持 使用递归\r\n    let dep = new Dep();\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                dep.depend();   // 让这个属性收集器记住当前的watcher\r\n                if(childOb) {   // 让数组和对象本身也进行依赖收集\r\n                    childOb.dep.depend();\r\n                    if(Array.isArray(value)) {\r\n                        console.log(value);\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) {    // 闭包，可以拿到value\r\n                return;\r\n            }\r\n            value = newValue;\r\n            dep.notify();   // 更新后通知，重新渲染\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data == null) { // typeof null = object 历史遗留问题\r\n        return;    // 只对对象进行劫持\r\n    }\r\n    // 还需要判断一个对象是否被劫持过，劫持过就不需要重复劫持了，故需要添加一个实例来判断\r\n    if(data.__ob__ instanceof Observe) {\r\n        return data.__ob__;\r\n    }\r\n    return new Observe(data);\r\n}","import Dep from \"./observe/dep.js\";\r\nimport { observe } from \"./observe/index.js\";\r\nimport Watcher, { nextTick } from \"./observe/watcher.js\";\r\n\r\nexport function initState(vm) {\r\n    // 将数据拿出来，进行数据劫持\r\n    const ops = vm.$options;\r\n    if(ops?.data) {  // 如果给了数据\r\n        initData(vm);\r\n    }\r\n    if(ops?.computed) {  // 如果有计算属性\r\n        initComputed(vm);\r\n    }\r\n    if(ops?.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for(let key in watch) {\r\n        const handler = watch[key]; // 可以是字符串 数组 函数 \r\n        if(Array.isArray(handler)) {\r\n            for(let i = 0;i < handler.length;++ i) {\r\n                createWatcher(vm,key,handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm,key,handler);\r\n        }\r\n    }\r\n}\r\nfunction createWatcher(vm,key,handler) {\r\n    if(typeof handler === 'string') {\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key,handler);\r\n}\r\nfunction proxy(vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[target][key]; // vm._data.xxx\r\n        },\r\n        set(newValue) {\r\n            if(vm[target][key] === newValue) {\r\n                return ;\r\n            }\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;    // 在vue2中，可能是函数也可能是对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // 是函数就执行，不是则直接赋值\r\n    vm._data = data;    // 跟踪data，因为data被单独拿出来了，data被监听或是其他的vm不知道\r\n    // 数据劫持，vue2使用了defineProperty\r\n    observe(data);  // 此处修改data在Vue上体现不出，需要定义_data = data\r\n    // 将vm._data 使用vm代理，因为用户访问数据使用vm._data较为麻烦\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}\r\nfunction initComputed(vm) {\r\n    const watchers = vm._computedWatchers = {}; // 即计算属性watcher保存在vm上\r\n    const computed = vm.$options.computed;\r\n    for(let key in computed) {\r\n        let userDef = computed[key];\r\n        const getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n        \r\n        watchers[key] = new Watcher(vm,getter,{lazy: true});    // 将属性和watcher对应\r\n        defineComputed(vm,key,userDef);\r\n    }\r\n}\r\nfunction defineComputed(target,key,userDef) {\r\n    const setter = userDef.set || (() => {});\r\n    Object.defineProperty(target,key,{\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    });\r\n}\r\nfunction createComputedGetter(key) { // 检测是否执行，即缓存结果\r\n    return function() { // this是target 即vm\r\n        const watcher = this._computedWatchers[key];\r\n        if(watcher.dirty) {\r\n            // 如果是脏的 调用用户getter\r\n            watcher.evaluate();\r\n        }\r\n        if(Dep.target) {    // 计算属性出栈后还要渲染watcher 要让计算属性收集上一层watcher\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    Vue.prototype.$watch = function(expOrFn,cb) {\r\n        new Watcher(this,expOrFn,{user:true},cb);  // this是vm,因为是vm调用\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index.js\";\r\nimport { mountComponent } from \"./lifecycle.js\"\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {   // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) {   // 用于初始化\r\n        const vm = this;\r\n        // 如果扩展了其他方法，也需要拿到options的话，就考虑将options放在实例上\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n        if(options.el) {    // 说明用户传递了el\r\n            vm.$mount(options.el);  // 实习数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n\r\n        if(!ops.render) {   // 没有渲染函数\r\n            let template;\r\n            if(!ops.template && el) {   // 也没有模板，但是有el,说明用户在body区域写了HTML标签\r\n                template = el.outerHTML;\r\n            } else {\r\n                if(el) {    // 说明用户在template处写了HTML标签\r\n                    template = ops.template;    \r\n                }\r\n            }\r\n            if(template) {\r\n                console.log(template);\r\n                const render = compileToFunction(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 挂载实例\r\n    }\r\n}","import { initGlobalAPI } from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifycycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\n// 不使用类是因为不如函数方便添加功能\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\ninitMixin(Vue); // 扩展init方法\r\ninitLifycycle(Vue); // vm_update vm_render\r\ninitStateMixin(Vue);    // 实现了nextTick $watch\r\ninitGlobalAPI(Vue);\r\n\r\nexport default Vue;"],"names":["initGlobalAPI","Vue","options","mixin","extend","Sub","arguments","length","undefined","_init","prototype","Object","create","constructor","components","component","id","definition","ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","top","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","val","JSON","stringify","slice","genChildren","map","child","gen","join","codegen","defaultTagRE","test","lastIndex","tokens","exec","index","trim","ast","code","compileToFunction","template","render","Function","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","Watcher","vm","expOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","get","dep","has","add","evaluate","res","call","queueWatcher","run","oldValue","newValue","console","log","queue","hasW","pending","flushSchedulerQueue","flushQueue","clear","q","nextTick","callbacks","waiting","flushCallback","cbs","timerFn","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","_data","_len","Array","_key","VNode","createTextVNode","createElm","vnode","el","createElement","patchProps","appendChild","oldProps","props","oldStyle","style","newStyle","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","isSameVnode","vnode1","vnode2","newNode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVNode","newStartVNode","oldEndVNode","newEndVNode","moveIndex","moveVNode","childEl","anchor","initLifycycle","_update","$el","preVNode","_vnode","_c","apply","_v","_s","_render","$options","mountComponent","updateComponent","oldArrayProto","newArrayProto","methods","method","_oldArrayProto$method","args","inserted","splice","ob","__ob__","observeArray","Observe","isArray","defineProperty","enumerable","__proto__","walk","keys","defineReactive","observe","dependArray","childOb","set","_typeof","initState","ops","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","watchers","_computedWatchers","userDef","defineComputed","setter","createComputedGetter","initStateMixin","$nextTick","initMixin","$mount","querySelector","outerHTML"],"mappings":"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"}