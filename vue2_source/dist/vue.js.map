{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译处理\r\nexport function compileToFunction(template) {\r\n    // 将template 转换成ast语法树\r\n    // 生成render函数 （执行后获得虚拟DOM）\r\n}","// 重写部分方法\r\nlet oldArrayProto = Array.prototype;\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);   // 复制一份\r\n// 需要重写的方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];  // 其他方法如concat不会改变原数组，不需要重写\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {\r\n        // 默认需要调用原方法\r\n        const res = oldArrayProto[method].call(this,...args);   // 需要改变this执行，谁执行的绑定为谁\r\n        // 数据劫持\r\n        let inserted;\r\n        // 调用方法的是data上的数据\r\n        switch(method) {    // 获取新增的值\r\n            case 'push': \r\n            case 'unshift': \r\n                    inserted = args;\r\n                    break;  \r\n            case 'splice':  // arr.splice(开始位置，删除个数，新增数量...)\r\n                    inserted = args.splice(2);  // 获取新增数量，即剪切掉开始位置和删除个数\r\n            default:\r\n                    break;\r\n        }\r\n        let ob = this.__ob__;\r\n        if(inserted) {\r\n            // 对新增的内容进行监测,但是拿不到Observe的observeArray\r\n            // 将observeArray从类中分离不可行，不符合要求\r\n            // 调用方法的this是Observe 中传入的data，故可以在data上将Observe实例挂载上去\r\n            ob.observeArray(inserted);\r\n        }\r\n        return res;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\n\r\n// 对于数组来说，不推荐使用索引当作key来劫持，存在a[10000] = 1这种写法，那么劫持非常耗费性能\r\nclass Observe {\r\n    constructor(data) {\r\n        if (Array.isArray(data)) {\r\n            // this是Observe的实例,同时给数据加标识，如果有属性表示该数据被监测过\r\n            // data.__ob__ = this;\r\n            // 但是要变成不可枚举的，不然在observe死循环\r\n            Object.defineProperty(data,'__ob__',{\r\n                value: this,\r\n                enumerable: false\r\n            });\r\n            // 用户一般使用数组方法修改数组，那么重写这些方法去监控\r\n            // data.__proto__ = {} 不推荐 直接重写，那么数组其他方法也没了\r\n            data.__proto__ = newArrayProto;\r\n            // 对数组中每一个值也要检测，万一是对象\r\n            this.observeArray(data);\r\n        } else {\r\n            // Object.defineProperty 只能劫持存在的属性\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性，对性能有影响\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item));\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    observe(value); // 对所有对象的属性进行劫持 使用递归\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) {    // 闭包，可以拿到value\r\n                return;\r\n            }\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;    // 只对对象进行劫持\r\n    }\r\n    // 还需要判断一个对象是否被劫持过，劫持过就不需要重复劫持了，故需要添加一个实例来判断\r\n    if(data.__ob__ instanceof Observe) {\r\n        return data.__ob__;\r\n    }\r\n    return new Observe(data);\r\n}","import { observe } from \"./observe/index.js\";\r\n\r\nexport function initState(vm) {\r\n    // 将数据拿出来，进行数据劫持\r\n    const ops = vm.$options;\r\n    if(ops.data) {\r\n        initData(vm);\r\n    }\r\n\r\n}\r\nfunction proxy(vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[target][key]; // vm._data.xxx\r\n        },\r\n        set(newValue) {\r\n            if(vm[target][key] === newValue) {\r\n                return ;\r\n            }\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;    // 在vue2中，可能是函数也可能是对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // 是函数就执行，不是则直接赋值\r\n    vm._data = data;    // 跟踪data\r\n    // 数据劫持，vue2使用了defineProperty\r\n    observe(data);  // 此处修改data在Vue上体现不出，需要定义_data = data\r\n    // 将vm._data 使用vm代理，因为用户访问数据使用vm._data较为麻烦\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index.js\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {   // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) {   // 用于初始化\r\n        const vm = this;\r\n        // 如果扩展了其他方法，也需要拿到options的话，就考虑将options放在实例上\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n        \r\n        if(options.el) {    // 说明用户传递了el\r\n            vm.$mount(options.el);  // 实习数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render) {   // 没有渲染函数\r\n            let template;\r\n            if(!ops.template && el) {   // 也没有模板，但是有el,说明用户在body区域写了HTML标签\r\n                template = el.outerHTML;\r\n            } else {\r\n                if(el) {    // 说明用户在template处写了HTML标签\r\n                    template = ops.template;    \r\n                }\r\n            }\r\n\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n\r\n        ops.render;\r\n    }\r\n}","import { initMixin } from \"./init\";\r\n\r\n// 不使用类是因为不如函数方便添加功能\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue); // 扩展init方法\r\n\r\nexport default Vue;"],"names":["compileToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","_len","arguments","length","args","_key","res","call","apply","concat","inserted","splice","ob","__ob__","observeArray","Observe","data","_classCallCheck","isArray","defineProperty","value","enumerable","__proto__","walk","_createClass","key","keys","defineReactive","item","observe","target","get","set","newValue","_typeof","initState","vm","ops","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}