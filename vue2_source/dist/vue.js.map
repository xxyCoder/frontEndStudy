{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译处理\r\n// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {  // 对于vue2来说，一开始一定是<\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];\r\n    let top,root;\r\n\r\n    function createASTElement(tag,attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    // 最终需要转换成一颗抽象语法树\r\n    function start(tag,attrs) {\r\n        let node = createASTElement(tag,attrs);\r\n        if(!root) { // 如果是空树，那么将当前节点当作根节点\r\n            root = node;\r\n        }\r\n        if(top) {   // 父子节点双向记住\r\n            node.parent = top;\r\n            top.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        top = node;\r\n    }\r\n\r\n    function chars(text) {  \r\n        text = text.replace(/\\s/g,'');\r\n        text && top.children.push({ // 文本直接放到当前节点中\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: top\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        let node = stack.pop();\r\n        if(node !== tag) {  // 校验是否合法\r\n            // todo...\r\n        }\r\n        top = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);   // 截取，才好继续匹配后面的内容\\\r\n            // 如果不是结束标签就一直匹配\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({name: attr[1],value: attr[3] || attr[4] || attr[5]});\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n\r\n\r\n        return false;   // 不是开始标签\r\n    }\r\n\r\n    while (html) {\r\n        // textEnd = 0,说明是一个开始标签或结束标签 <div>   ></div>\r\n        // textEnd > 0,说明是文本的结束位置 xxxx</div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName,startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        else if(textEnd > 0) {  \r\n            let text = html.substring(0,textEnd);   // 文本内容\r\n            if(text) {\r\n                chars(text);\r\n                advance(text.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {  // 属性是一个数组\r\n    let str = '';\r\n    for(let i = 0;i < attrs.length;++ i) {\r\n        let attr = attrs[i];    // {name,value};\r\n        if(attr.name === 'style') { // 对于style属性需要在外面加一个大括号  style: {color: 'red'};\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                const [key,val] = item.split(':');\r\n                obj[key] = val;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    // 去掉多余逗号\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction genChildren(children) {\r\n    if(children) {\r\n        return children.map(child => gen(child)).join(',');\r\n    }\r\n}\r\n\r\nfunction gen(node) {\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else if(node.type === 3) {    // 对于文本属性，需要判断是否带有变量，没有带变量直接返回\r\n        let text = node.text;\r\n        const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n        if(!defaultTagRE.test(text)) {  // 不带变量文本 \r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            defaultTagRE.lastIndex = 0; // 去掉全局匹配，避免exec无法继续匹配\r\n            let tokens = [],match,lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                let index = match.index;    // 匹配的位置\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length) {   // 拿到剩余不带变量的字符\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // 生成对应标签\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0? genProps(ast.attrs) : 'null'}${ast.children.length? `,${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 将template 转换成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 生成render函数 （执行后获得虚拟DOM）\r\n    let code = codegen(ast);\r\n    code = `with(this) {return ${code}}`;   // 为了取变量的值，将作用域改变\r\n    let render = new Function(code);\r\n    return render;\r\n}","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id ++;\r\n        this.subs = []; // 存放当前属性对应的watcher有那些\r\n    }\r\n    depend() {\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this);    // 让watcher记住dep\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\nDep.target = null;  // 如何将watcher和dep关联？暴露一个全局属性\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\nexport default Dep;","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\nclass Watcher {\r\n    constructor(vm,expOrFn,options,cb) {\r\n        this.id = id ++;    // 不同组件有不同watcher，故使用id标识\r\n        this.renderWatcher = options;   // 是一个渲染watcher\r\n        if(typeof expOrFn === 'string') {\r\n            this.getter = function() {\r\n                return vm[expOrFn];\r\n            }\r\n        } else {\r\n            this.getter = expOrFn;  // 调用该函数可以发送取值\r\n        }\r\n        this.deps = []; // 实现计算属性和清理工作\r\n        this.depsId = new Set(); // 去重，避免重复放置dep\r\n        this.lazy = options.lazy;\r\n        this.cb = cb;\r\n        this.dirty = this.lazy\r\n        this.vm = vm;  \r\n        this.user = options.user; // 标识是否是用户自己的watcher\r\n        this.value = this.lazy ? undefined : this.get();\r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get();    // 获取计算属性getter返回值\r\n        this.dirty = false;\r\n    }\r\n    get() {\r\n        pushTarget(this);\r\n        const res = this.getter.call(this.vm);\r\n        popTarget();\r\n        return res;\r\n    }\r\n    update() {  // 异步更新\r\n        if(this.lazy) {\r\n            this.dirty = true;  // 依赖值发送变化，就标记变为脏值，但是没有重新渲染，故需要一个渲染watcher\r\n        } else {\r\n            queueWatcher(this); // 把当前watcher暂存\r\n        }\r\n    }\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();\r\n        if(this.user) {\r\n            console.log(newValue,oldValue,'watcher');\r\n            this.cb.call(this.vm,newValue,oldValue);\r\n        }\r\n    }\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i --) {\r\n            this.deps[i].depend(); \r\n        }\r\n    }\r\n}\r\n\r\nlet queue = [];\r\nlet hasW = new Set();\r\nlet pending = false;    // 防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0);\r\n    pending = false;\r\n    queue = [];\r\n    hasW.clear();\r\n    flushQueue.forEach(q => q.run());\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if(!hasW.has(id)) {\r\n        queue.push(watcher);\r\n        hasW.add(id);\r\n        \r\n        if(!pending) {\r\n            nextTick(flushSchedulerQueue);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\nlet callbacks = []; // 维护nextTick的回调方法，避免多个nextTick要开启多个定时器\r\nlet waiting = false;\r\n\r\nfunction flushCallback() {\r\n    let cbs = callbacks.slice(0);\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb());\r\n}\r\n\r\nlet timerFn;\r\nif(Promise) {\r\n    timerFn = () => {\r\n        Promise.resolve().then(flushCallback);\r\n    }\r\n}\r\nelse if(MutationObserver) {\r\n    let observer = MutationObserver(flushCallback);\r\n    let textNode = document.createTextNode(1);\r\n    observer.observer(textNode,{\r\n        characterData: true\r\n    });\r\n    timerFn = () => {\r\n        textNode.textContent = 2;\r\n    }\r\n} \r\nelse if(setImmediate) {\r\n    timerFn = () => {\r\n        setImmediate(flushCallback);\r\n    }\r\n} \r\nelse {\r\n    timerFn = () => {\r\n        setTimeout(flushCallback);\r\n    }\r\n}\r\n\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb);\r\n    if(!waiting) {\r\n        timerFn();\r\n        // Promise.resolve().then(flushCallback);\r\n        waiting = true;\r\n    }\r\n}\r\n/*\r\n    需要给每个属性增加一个dep，目的是收集watcher\r\n    一个属性对应多个组件，故一个dep对应多个watcher\r\n    一个组件有多个属性，故一个watcher对应多个dep\r\n    即多对多关系\r\n*/\r\nexport default Watcher;","// h()\r\nexport function createElementVNode(vm,tag,data,...children) {\r\n    data ??= {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return VNode(vm,tag,key,data,children);\r\n}\r\n// _v()\r\nexport function createTextVNode(vm,text) {\r\n    return VNode(vm,undefined,undefined,undefined,undefined,text);\r\n}\r\n\r\nfunction VNode(vm,tag,key,data,children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    };\r\n}","function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if (typeof tag === 'string') {   // 标签\r\n        vnode.el = document.createElement(tag); // 将真实节点和虚拟节点对应\r\n        patchProps(vnode.el, {}, data);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction patchProps(el, oldProps = {}, props = {}) {\r\n    // 旧节点有样式，新节点没有，则删除\r\n    let oldStyle = oldProps.style || {};\r\n    let newStyle = props.style || {};\r\n    for(let key in oldStyle) {\r\n        if(!newStyle[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    // 对比新旧属性\r\n    for(let key in oldProps) {\r\n         if(!props[key]) {\r\n            el.removeAttribute(key);\r\n         }\r\n    }\r\n\r\n    for (let key in props) {    // 使用新的覆盖旧的\r\n        if (key === 'style') {\r\n            for (let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, VNode) {\r\n    const isRealElement = oldVNode.nodeType;\r\n    if (isRealElement) {\r\n        const elm = oldVNode;   // 获取真实元素\r\n        const parentElm = elm.parentNode;   // 拿到父元素\r\n        let newElm = createElm(VNode);\r\n        parentElm.insertBefore(newElm, elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n        return newElm;\r\n    } else {\r\n        return patchVNode(oldVNode, VNode);\r\n    }\r\n}\r\n\r\nfunction isSameVnode(vnode1, vnode2) {\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\r\n}\r\n\r\nfunction patchVNode(oldVNode, VNode) {\r\n    // 1. 两个节点不同标签，直接删除旧节点，换新节点\r\n    // 2. 是相同节点 （判断节点tag和key）继续比较属性是否有差异（复用老节点，更新差异）\r\n    // 3. 继续比较子节点\r\n    if (!isSameVnode(oldVNode, VNode)) {\r\n        // 用父亲节点来操作子节点\r\n        let newNode = createElm(VNode);\r\n        oldVNode.el.parentNode.replaceChild(newNode, oldVNode);\r\n        return newNode;\r\n    }\r\n    let el = oldVNode.el; // 复用老节点元素\r\n    if (!oldVNode.tag) { // 是文本\r\n        if (oldVNode.text !== VNode.text) {\r\n            el.textContent = VNode.text;    // 更新文本内容\r\n        }\r\n    }\r\n    // 是标签\r\n    patchProps(el,oldVNode.data,VNode.data);\r\n    // 比较儿子节点\r\n    // 1. 一方有子节点，一方没有\r\n    // 2. 两方都有子节点\r\n    let oldChildren = oldVNode.children || [];\r\n    let newChildren = VNode.children || [];\r\n    if(oldChildren.length > 0 && newChildren.length > 0) {\r\n        updateChildren(el,oldChildren,newChildren);\r\n    } else if(newChildren.length > 0) {\r\n        mountChildren(el,newChildren);\r\n    } else if(oldChildren.length > 0) {\r\n        el.innerHTML = '';  // 可以循环删除\r\n    }\r\n    return el;\r\n}\r\nfunction mountChildren(el,newChildren) {\r\n    for(let i = 0;i < newChildren.length;++ i) {\r\n        let child = newChildren[i];\r\n        el.appendChild(child);\r\n    }\r\n}\r\nfunction updateChildren(el,oldChildren,newChildren) {\r\n    // vue2采用双指针比较\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n    \r\n    // 前前 前后 后前 后后比较\r\n    let oldStartVNode = oldChildren[0];\r\n    let newStartVNode = newChildren[0];\r\n    let oldEndVNode = oldChildren[oldEndIndex];\r\n    let newEndVNode = newChildren[newEndIndex];\r\n\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        // 前前比较\r\n        if(isSameVnode(oldStartVNode,newStartVNode)) {\r\n            patchVNode(oldStartVNode,newStartVNode);\r\n            oldStartVNode = oldChildren[++ oldStartIndex];\r\n            newStartVNode = newChildren[++ newStartIndex];\r\n        }\r\n        // 后后比较\r\n        else if(isSameVnode(oldEndVNode,newEndVNode)) {\r\n            patchVNode(oldEndVNode,newEndVNode);\r\n            oldEndVNode = oldChildren[-- oldEndIndex];\r\n            newEndVNode = newChildren[-- newEndIndex];\r\n        }\r\n        // 交叉对比\r\n        else if(isSameVnode(oldEndVNode,newStartVNode)) {\r\n            patchVNode(oldEndVNode,newStartVNode);\r\n            oldEndVNode = oldChildren[-- oldEndIndex];\r\n            newStartVNode = newChildren[newStartIndex ++];\r\n\r\n            el.insertBefore(oldEndVNode.el,oldStartVNode.el);   // 将尾旧节点移到头旧节点前\r\n        }\r\n        else if(isSameVnode(oldStartVNode,newEndVNode)) {\r\n            patchVNode(oldStartVNode,newEndVNode);\r\n            el.insertBefore(oldStartVNode.el,oldEndIndex.el.nextSibling);\r\n            oldStartVNode = oldChildren[++ oldStartIndex];\r\n            newEndVNode = newChildren[-- newEndIndex];\r\n        }\r\n    }\r\n\r\n    if(newStartIndex <= newEndIndex) {  // 有新节点，插入\r\n        for(let i = newStartIndex;i <= newEndIndex;++ i) {\r\n            let childEl = createElm(newChildren[i]);    // 将虚拟节点转换为真实节点并插入\r\n            let anchor = newChildren[newStartIndex + 1] ? newChildren[newStartIndex + 1].el : null;\r\n            el.insertBefore(childEl,anchor);\r\n        }\r\n    }\r\n\r\n    while(oldStartIndex <= oldEndIndex) {   // 多余旧节点，删除\r\n        el.removeChild(oldChildren[oldStartIndex ++].el);\r\n    }\r\n}","import Watcher from \"./observe/watcher.js\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index.js\";\r\nimport { patch } from \"./vdom/patch.js\";\r\n\r\nexport function initLifycycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this,el = vm.$el;\r\n        vm.$el = patch(el,vnode);    // 既有初始化的功能，又有更新的功能\r\n    };\r\n    // _c(tag,{},child)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this,...arguments);\r\n    };\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this,...arguments);\r\n    };\r\n    Vue.prototype._s = function(value) {\r\n        return JSON.stringify(value);\r\n    };\r\n    Vue.prototype._render = function() {\r\n        // 让with中的this指向实例\r\n        return this.$options.render.call(this);   // 通过ast语法转义后生成的render方法\r\n    };\r\n}\r\n\r\nexport function mountComponent(vm,el) {\r\n    vm.$el = el;\r\n    // 1. 调用render方法产生虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    };\r\n    new Watcher(vm,updateComponent,true);   // true标识渲染过程\r\n    // 2. 根据虚拟DOM产生真实DOM\r\n    // 3. 插入到el元素中\r\n}","// 重写部分方法\r\nlet oldArrayProto = Array.prototype;\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);   // 复制一份\r\n// 需要重写的方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];  // 其他方法如concat不会改变原数组，不需要重写\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {\r\n        // 默认需要调用原方法\r\n        const res = oldArrayProto[method].call(this,...args);   // 需要改变this执行，谁执行的绑定为谁\r\n        // 数据劫持\r\n        let inserted;\r\n        // 调用方法的是data上的数据\r\n        switch(method) {    // 获取新增的值\r\n            case 'push': \r\n            case 'unshift': \r\n                    inserted = args;\r\n                    break;  \r\n            case 'splice':  // arr.splice(开始位置，删除个数，新增数量...)\r\n                    inserted = args.splice(2);  // 获取新增数量，即剪切掉开始位置和删除个数\r\n            default:\r\n                    break;\r\n        }\r\n        let ob = this.__ob__;\r\n        if(inserted) {\r\n            // 对新增的内容进行监测,但是拿不到Observe的observeArray\r\n            // 将observeArray从类中分离不可行，不符合要求\r\n            // 调用方法的this是Observe 中传入的data，故可以在data上将Observe实例挂载上去\r\n            ob.observeArray(inserted);\r\n        }\r\n        ob.dep.notify();    // 通知更新\r\n        return res;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n// 对于数组来说，不推荐使用索引当作key来劫持，存在a[10000] = 1这种写法，那么劫持非常耗费性能\r\nclass Observe {\r\n    constructor(data) {\r\n        this.dep = new Dep();   // 给所有对象都新增dep\r\n        \r\n        if (Array.isArray(data)) {\r\n            // this是Observe的实例,同时给数据加标识，如果有属性表示该数据被监测过\r\n            // data.__ob__ = this;\r\n            // 但是要变成不可枚举的，不然在observe死循环\r\n            Object.defineProperty(data,'__ob__',{\r\n                value: this,\r\n                enumerable: false\r\n            });\r\n            // 用户一般使用数组方法修改数组，那么重写这些方法去监控\r\n            // data.__proto__ = {} 不推荐 直接重写，那么数组其他方法也没了\r\n            data.__proto__ = newArrayProto;\r\n            // 对数组中每一个值也要检测，万一是对象\r\n            this.observeArray(data);\r\n        } else {\r\n            // Object.defineProperty 只能劫持存在的属性\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性，对性能有影响\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item));\r\n    }\r\n}\r\n\r\nfunction dependArray(value) {\r\n    for(let i = 0;i < value.length;++ i) {\r\n        value[i].__ob__ && value[i].__ob__.dep.depend();\r\n        if(Array.isArray(value[i])) {\r\n            dependArray(value[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    let childOb = observe(value); // 对所有对象的属性进行劫持 使用递归\r\n    let dep = new Dep();\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                dep.depend();   // 让这个属性收集器记住当前的watcher\r\n                if(childOb) {   // 让数组和对象本身也进行依赖收集\r\n                    childOb.dep.depend();\r\n                    if(Array.isArray(value)) {\r\n                        console.log(value);\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) {    // 闭包，可以拿到value\r\n                return;\r\n            }\r\n            value = newValue;\r\n            dep.notify();   // 更新后通知，重新渲染\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data == null) { // typeof null = object 历史遗留问题\r\n        return;    // 只对对象进行劫持\r\n    }\r\n    // 还需要判断一个对象是否被劫持过，劫持过就不需要重复劫持了，故需要添加一个实例来判断\r\n    if(data.__ob__ instanceof Observe) {\r\n        return data.__ob__;\r\n    }\r\n    return new Observe(data);\r\n}","import Dep from \"./observe/dep.js\";\r\nimport { observe } from \"./observe/index.js\";\r\nimport Watcher, { nextTick } from \"./observe/watcher.js\";\r\n\r\nexport function initState(vm) {\r\n    // 将数据拿出来，进行数据劫持\r\n    const ops = vm.$options;\r\n    if(ops.data) {  // 如果给了数据\r\n        initData(vm);\r\n    }\r\n    if(ops.computed) {  // 如果有计算属性\r\n        initComputed(vm);\r\n    }\r\n    if(ops.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for(let key in watch) {\r\n        const handler = watch[key]; // 可以是字符串 数组 函数 \r\n        if(Array.isArray(handler)) {\r\n            for(let i = 0;i < handler.length;++ i) {\r\n                createWatcher(vm,key,handler[i]);\r\n            }\r\n        } else {\r\n            createWatcher(vm,key,handler);\r\n        }\r\n    }\r\n}\r\nfunction createWatcher(vm,key,handler) {\r\n    if(typeof handler === 'string') {\r\n        handler = vm[handler];\r\n    }\r\n    return vm.$watch(key,handler);\r\n}\r\nfunction proxy(vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[target][key]; // vm._data.xxx\r\n        },\r\n        set(newValue) {\r\n            if(vm[target][key] === newValue) {\r\n                return ;\r\n            }\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;    // 在vue2中，可能是函数也可能是对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // 是函数就执行，不是则直接赋值\r\n    vm._data = data;    // 跟踪data，因为data被单独拿出来了，data被监听或是其他的vm不知道\r\n    // 数据劫持，vue2使用了defineProperty\r\n    observe(data);  // 此处修改data在Vue上体现不出，需要定义_data = data\r\n    // 将vm._data 使用vm代理，因为用户访问数据使用vm._data较为麻烦\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}\r\nfunction initComputed(vm) {\r\n    const watchers = vm._computedWatchers = {}; // 即计算属性watcher保存在vm上\r\n    const computed = vm.$options.computed;\r\n    for(let key in computed) {\r\n        let userDef = computed[key];\r\n        const getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n        \r\n        watchers[key] = new Watcher(vm,getter,{lazy: true});    // 将属性和watcher对应\r\n        defineComputed(vm,key,userDef);\r\n    }\r\n}\r\nfunction defineComputed(target,key,userDef) {\r\n    const setter = userDef.set || (() => {});\r\n    Object.defineProperty(target,key,{\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    });\r\n}\r\nfunction createComputedGetter(key) { // 检测是否执行，即缓存结果\r\n    return function() { // this是target 即vm\r\n        const watcher = this._computedWatchers[key];\r\n        if(watcher.dirty) {\r\n            // 如果是脏的 调用用户getter\r\n            watcher.evaluate();\r\n        }\r\n        if(Dep.target) {    // 计算属性出栈后还要渲染watcher 要让计算属性收集上一层watcher\r\n            watcher.depend();\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick;\r\n    Vue.prototype.$watch = function(expOrFn,cb) {\r\n        new Watcher(this,expOrFn,{user:true},cb);  // this是vm,因为是vm调用\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index.js\";\r\nimport { mountComponent } from \"./lifecycle.js\"\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {   // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) {   // 用于初始化\r\n        const vm = this;\r\n        // 如果扩展了其他方法，也需要拿到options的话，就考虑将options放在实例上\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if(options.el) {    // 说明用户传递了el\r\n            vm.$mount(options.el);  // 实习数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render) {   // 没有渲染函数\r\n            let template;\r\n            if(!ops.template && el) {   // 也没有模板，但是有el,说明用户在body区域写了HTML标签\r\n                template = el.outerHTML;\r\n            } else {\r\n                if(el) {    // 说明用户在template处写了HTML标签\r\n                    template = ops.template;    \r\n                }\r\n            }\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 挂载实例\r\n    }\r\n}","import { initMixin } from \"./init\";\r\nimport { initLifycycle } from \"./lifecycle\";\r\nimport { initStateMixin } from \"./state\";\r\n\r\n// 不使用类是因为不如函数方便添加功能\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\ninitMixin(Vue); // 扩展init方法\r\ninitLifycycle(Vue); // vm_update vm_render\r\ninitStateMixin(Vue);    // 实现了nextTick $watch\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","top","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","val","JSON","stringify","slice","genChildren","map","child","gen","join","codegen","defaultTagRE","test","lastIndex","tokens","exec","index","trim","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","Watcher","vm","expOrFn","options","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","undefined","get","dep","has","add","evaluate","res","call","queueWatcher","run","oldValue","newValue","console","log","queue","hasW","pending","flushSchedulerQueue","flushQueue","clear","q","nextTick","callbacks","waiting","flushCallback","cbs","timerFn","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","_data","_len","arguments","Array","_key","VNode","createTextVNode","createElm","vnode","el","createElement","patchProps","appendChild","oldProps","props","oldStyle","style","newStyle","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","isSameVnode","vnode1","vnode2","newNode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVNode","newStartVNode","oldEndVNode","newEndVNode","childEl","anchor","initLifycycle","Vue","prototype","_update","$el","_c","apply","_v","_s","_render","$options","mountComponent","updateComponent","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","inserted","splice","ob","__ob__","observeArray","Observe","isArray","defineProperty","enumerable","__proto__","walk","keys","defineReactive","observe","dependArray","childOb","set","_typeof","initState","ops","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","watchers","_computedWatchers","userDef","defineComputed","setter","createComputedGetter","initStateMixin","$nextTick","initMixin","_init","$mount","querySelector","outerHTML"],"mappings":"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"}