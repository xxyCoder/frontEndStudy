{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 对模板进行编译处理\r\n// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {  // 对于vue2来说，一开始一定是<\r\n\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];\r\n    let top,root;\r\n\r\n    function createASTElement(tag,attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        };\r\n    }\r\n\r\n    // 最终需要转换成一颗抽象语法树\r\n    function start(tag,attrs) {\r\n        let node = createASTElement(tag,attrs);\r\n        if(!root) { // 如果是空树，那么将当前节点当作根节点\r\n            root = node;\r\n        }\r\n        if(top) {   // 父子节点双向记住\r\n            node.parent = top;\r\n            top.children.push(node);\r\n        }\r\n        stack.push(node);\r\n        top = node;\r\n    }\r\n\r\n    function chars(text) {  \r\n        text = text.replace(/\\s/g,'');\r\n        text && top.children.push({ // 文本直接放到当前节点中\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: top\r\n        });\r\n    }\r\n\r\n    function end(tag) {\r\n        let node = stack.pop();\r\n        if(node !== tag) {  // 校验是否合法\r\n            // todo...\r\n        }\r\n        top = stack[stack.length - 1];\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);   // 截取，才好继续匹配后面的内容\\\r\n            // 如果不是结束标签就一直匹配\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({name: attr[1],value: attr[3] || attr[4] || attr[5]});\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n\r\n\r\n        return false;   // 不是开始标签\r\n    }\r\n\r\n    while (html) {\r\n        // textEnd = 0,说明是一个开始标签或结束标签 <div>   ></div>\r\n        // textEnd > 0,说明是文本的结束位置 xxxx</div>\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd == 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if(startTagMatch) {\r\n                start(startTagMatch.tagName,startTagMatch.attrs);\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if(endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1]);\r\n                continue;\r\n            }\r\n        }\r\n        else if(textEnd > 0) {  \r\n            let text = html.substring(0,textEnd);   // 文本内容\r\n            if(text) {\r\n                chars(text);\r\n                advance(text.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {  // 属性是一个数组\r\n    let str = '';\r\n    for(let i = 0;i < attrs.length;++ i) {\r\n        let attr = attrs[i];    // {name,value};\r\n        if(attr.name === 'style') { // 对于style属性需要在外面加一个大括号  style: {color: 'red'};\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                const [key,val] = item.split(':');\r\n                obj[key] = val;\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    // 去掉多余逗号\r\n    return `{${str.slice(0,-1)}}`;\r\n}\r\n\r\nfunction genChildren(children) {\r\n    if(children) {\r\n        return children.map(child => gen(child)).join(',');\r\n    }\r\n}\r\n\r\nfunction gen(node) {\r\n    if(node.type === 1) {\r\n        return codegen(node);\r\n    } else if(node.type === 3) {    // 对于文本属性，需要判断是否带有变量，没有带变量直接返回\r\n        let text = node.text;\r\n        const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n        if(!defaultTagRE.test(text)) {  // 不带变量文本 \r\n            return `_v(${JSON.stringify(text)})`;\r\n        } else {\r\n            defaultTagRE.lastIndex = 0; // 去掉全局匹配，避免exec无法继续匹配\r\n            let tokens = [],match,lastIndex = 0;\r\n            while(match = defaultTagRE.exec(text)) {\r\n                let index = match.index;    // 匹配的位置\r\n                if(index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length) {   // 拿到剩余不带变量的字符\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join('+')})`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children);\r\n    // 生成对应标签\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length > 0? genProps(ast.attrs) : 'null'}${ast.children.length? `,${children}` : ''})`);\r\n    return code;\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 将template 转换成ast语法树\r\n    let ast = parseHTML(template);\r\n    // 生成render函数 （执行后获得虚拟DOM）\r\n    let code = codegen(ast);\r\n    code = `with(this) {return ${code}}`;   // 为了取变量的值，将作用域改变\r\n    let render = new Function(code);\r\n    return render;\r\n}","let id = 0;\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id ++;\r\n        this.subs = []; // 存放当前属性对应的watcher有那些\r\n    }\r\n    depend() {\r\n        // this.subs.push(Dep.target);\r\n        Dep.target.addDep(this);    // 让watcher记住dep\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\nDep.target = null;  // 如何将watcher和dep关联？暴露一个全局属性\r\nexport default Dep;","import Dep from \"./dep\";\r\n\r\nlet id = 0;\r\n\r\nclass Watcher {\r\n    constructor(vm,fn,options) {\r\n        this.id = id ++;    // 不同组件有不同watcher，故使用id标识\r\n        this.renderWatcher = options;   // 是一个渲染watcher\r\n        this.getter = fn;   // 调用该函数可以发送取值\r\n        this.deps = []; // 实现计算属性和清理工作\r\n        this.depsId = new Set(); // 去重，避免重复放置dep\r\n        this.get();\r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if(!this.depsId.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depsId.add(id);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    get() {\r\n        Dep.target = this;\r\n        this.getter();\r\n        Dep.target = null;\r\n    }\r\n    update() {\r\n        this.get();\r\n    }\r\n}\r\n/*\r\n    需要给每个属性增加一个dep，目的是收集watcher\r\n    一个属性对应多个组件，故一个dep对应多个watcher\r\n    一个组件有多个属性，故一个watcher对应多个dep\r\n    即多对多关系\r\n*/\r\nexport default Watcher;","// h()\r\nexport function createElementVNode(vm,tag,data,...children) {\r\n    data ??= {};\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key;\r\n    }\r\n    return VNode(vm,tag,key,data,children);\r\n}\r\n// _v()\r\nexport function createTextVNode(vm,text) {\r\n    return VNode(vm,undefined,undefined,undefined,undefined,text);\r\n}\r\n\r\nfunction VNode(vm,tag,key,data,children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    };\r\n}","import Watcher from \"./observe/watcher.js\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom/index.js\";\r\n\r\nfunction createElm(vnode) {\r\n    let { tag,data,children,text } = vnode;\r\n    if(typeof tag === 'string') {   // 标签\r\n        vnode.el = document.createElement(tag); // 将真实节点和虚拟节点对应\r\n        patchProps(vnode.el,data); \r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        })\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction patchProps(el,props) {\r\n    for(let key in props) {\r\n        if(key === 'style') {\r\n            for(let styleName in props[key]) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key,props[key]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode,VNode) {\r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement) {\r\n        const elm = oldVNode;   // 获取真实元素\r\n        const parentElm = elm.parentNode;   // 拿到父元素\r\n        let newElm = createElm(VNode);\r\n        parentElm.insertBefore(newElm,elm.nextSibling);\r\n        parentElm.removeChild(elm); // 删除老节点\r\n    }\r\n}\r\n\r\nexport function initLifycycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {\r\n        const vm = this,el = vm.$el;\r\n        patch(el,vnode);    // 既有初始化的功能，又有更新的功能\r\n    };\r\n    // _c(tag,{},child)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this,...arguments);\r\n    };\r\n    // _v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this,...arguments);\r\n    };\r\n    Vue.prototype._s = function(value) {\r\n        return JSON.stringify(value);\r\n    };\r\n    Vue.prototype._render = function() {\r\n        // 让with中的this指向实例\r\n        return this.$options.render.call(this);   // 通过ast语法转义后生成的render方法\r\n    };\r\n}\r\n\r\nexport function mountComponent(vm,el) {\r\n    vm.$el = el;\r\n    // 1. 调用render方法产生虚拟DOM\r\n    const updateComponent = () => {\r\n        vm._update(vm._render());\r\n    };\r\n    const w = new Watcher(vm,updateComponent,true);   // true标识渲染过程\r\n    console.log(w);\r\n    // 2. 根据虚拟DOM产生真实DOM\r\n    // 3. 插入到el元素中\r\n}","// 重写部分方法\r\nlet oldArrayProto = Array.prototype;\r\n\r\nexport let newArrayProto = Object.create(oldArrayProto);   // 复制一份\r\n// 需要重写的方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n];  // 其他方法如concat不会改变原数组，不需要重写\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {\r\n        // 默认需要调用原方法\r\n        const res = oldArrayProto[method].call(this,...args);   // 需要改变this执行，谁执行的绑定为谁\r\n        // 数据劫持\r\n        let inserted;\r\n        // 调用方法的是data上的数据\r\n        switch(method) {    // 获取新增的值\r\n            case 'push': \r\n            case 'unshift': \r\n                    inserted = args;\r\n                    break;  \r\n            case 'splice':  // arr.splice(开始位置，删除个数，新增数量...)\r\n                    inserted = args.splice(2);  // 获取新增数量，即剪切掉开始位置和删除个数\r\n            default:\r\n                    break;\r\n        }\r\n        let ob = this.__ob__;\r\n        if(inserted) {\r\n            // 对新增的内容进行监测,但是拿不到Observe的observeArray\r\n            // 将observeArray从类中分离不可行，不符合要求\r\n            // 调用方法的this是Observe 中传入的data，故可以在data上将Observe实例挂载上去\r\n            ob.observeArray(inserted);\r\n        }\r\n        return res;\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n// 对于数组来说，不推荐使用索引当作key来劫持，存在a[10000] = 1这种写法，那么劫持非常耗费性能\r\nclass Observe {\r\n    constructor(data) {\r\n        if (Array.isArray(data)) {\r\n            // this是Observe的实例,同时给数据加标识，如果有属性表示该数据被监测过\r\n            // data.__ob__ = this;\r\n            // 但是要变成不可枚举的，不然在observe死循环\r\n            Object.defineProperty(data,'__ob__',{\r\n                value: this,\r\n                enumerable: false\r\n            });\r\n            // 用户一般使用数组方法修改数组，那么重写这些方法去监控\r\n            // data.__proto__ = {} 不推荐 直接重写，那么数组其他方法也没了\r\n            data.__proto__ = newArrayProto;\r\n            // 对数组中每一个值也要检测，万一是对象\r\n            this.observeArray(data);\r\n        } else {\r\n            // Object.defineProperty 只能劫持存在的属性\r\n            this.walk(data);\r\n        }\r\n    }\r\n    walk(data) {    // 循环对象，对属性依次劫持\r\n        // 重新定义属性，对性能有影响\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]));\r\n    }\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item));\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    observe(value); // 对所有对象的属性进行劫持 使用递归\r\n    let dep = new Dep();\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            if(Dep.target) {\r\n                dep.depend();   // 让这个属性收集器记住当前的watcher\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) {    // 闭包，可以拿到value\r\n                return;\r\n            }\r\n            value = newValue;\r\n            dep.notify();   // 更新后通知，重新渲染\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;    // 只对对象进行劫持\r\n    }\r\n    // 还需要判断一个对象是否被劫持过，劫持过就不需要重复劫持了，故需要添加一个实例来判断\r\n    if(data.__ob__ instanceof Observe) {\r\n        return data.__ob__;\r\n    }\r\n    return new Observe(data);\r\n}","import { observe } from \"./observe/index.js\";\r\n\r\nexport function initState(vm) {\r\n    // 将数据拿出来，进行数据劫持\r\n    const ops = vm.$options;\r\n    if(ops.data) {\r\n        initData(vm);\r\n    }\r\n\r\n}\r\nfunction proxy(vm,target,key) {\r\n    Object.defineProperty(vm,key,{\r\n        get() {\r\n            return vm[target][key]; // vm._data.xxx\r\n        },\r\n        set(newValue) {\r\n            if(vm[target][key] === newValue) {\r\n                return ;\r\n            }\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;    // 在vue2中，可能是函数也可能是对象\r\n    data = typeof data === 'function' ? data.call(vm) : data; // 是函数就执行，不是则直接赋值\r\n    vm._data = data;    // 跟踪data\r\n    // 数据劫持，vue2使用了defineProperty\r\n    observe(data);  // 此处修改data在Vue上体现不出，需要定义_data = data\r\n    // 将vm._data 使用vm代理，因为用户访问数据使用vm._data较为麻烦\r\n    for(let key in data) {\r\n        proxy(vm,'_data',key);\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index.js\";\r\nimport { mountComponent } from \"./lifecycle.js\"\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {   // 给Vue增加init方法\r\n    Vue.prototype._init = function (options) {   // 用于初始化\r\n        const vm = this;\r\n        // 如果扩展了其他方法，也需要拿到options的话，就考虑将options放在实例上\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if(options.el) {    // 说明用户传递了el\r\n            vm.$mount(options.el);  // 实习数据挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        let ops = vm.$options;\r\n        if(!ops.render) {   // 没有渲染函数\r\n            let template;\r\n            if(!ops.template && el) {   // 也没有模板，但是有el,说明用户在body区域写了HTML标签\r\n                template = el.outerHTML;\r\n            } else {\r\n                if(el) {    // 说明用户在template处写了HTML标签\r\n                    template = ops.template;    \r\n                }\r\n            }\r\n            if(template) {\r\n                const render = compileToFunction(template);\r\n                ops.render = render;\r\n            }\r\n        }\r\n        mountComponent(vm,el); // 挂载实例\r\n    }\r\n}","import { initMixin } from \"./init\";\r\nimport { initLifycycle, mountComponent } from \"./lifecycle\";\r\n\r\n// 不使用类是因为不如函数方便添加功能\r\nfunction Vue(options) {\r\n    this._init(options);\r\n}\r\ninitMixin(Vue); // 扩展init方法\r\ninitLifycycle(Vue);\r\n\r\nexport default Vue;"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","top","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","_loop","i","obj","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","val","JSON","stringify","slice","genChildren","map","child","gen","join","codegen","defaultTagRE","test","lastIndex","tokens","exec","index","trim","ast","code","compileToFunction","template","render","Function","id","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","Watcher","vm","fn","options","renderWatcher","getter","deps","depsId","Set","get","dep","has","add","createElementVNode","data","_data","_len","arguments","Array","_key","VNode","createTextVNode","undefined","createElm","vnode","el","document","createElement","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifycycle","Vue","prototype","_update","$el","_c","apply","call","_v","_s","_render","$options","mountComponent","updateComponent","w","console","log","oldArrayProto","newArrayProto","Object","create","methods","method","_oldArrayProto$method","args","res","inserted","splice","ob","__ob__","observeArray","Observe","isArray","defineProperty","enumerable","__proto__","walk","keys","defineReactive","observe","set","newValue","_typeof","initState","ops","initData","proxy","initMixin","_init","$mount","querySelector","outerHTML"],"mappings":"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"}